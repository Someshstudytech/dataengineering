{
	"name": "dataflow8",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText13",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText14",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText15",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText16",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText17",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "union2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPID as string,",
				"          EMPNAME as string,",
				"          SALARY as string,",
				"          Month as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          EMPLOYEENAME as string,",
				"          EMPLOYENAME as string,",
				"          EMPSALARY as string,",
				"          Monthname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          SALARY as string,",
				"          Month as string,",
				"          EMPNAME as string,",
				"          EMPID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source3",
				"source1, source2 union(byName: false)~> union1",
				"source3, source1 union(byName: true)~> union2",
				"union2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EMPID as string,",
				"          EMPNAME as string,",
				"          SALARY as string,",
				"          Month as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EMPID as string,",
				"          EMPNAME as string,",
				"          SALARY as string,",
				"          Month as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2"
			]
		}
	}
}